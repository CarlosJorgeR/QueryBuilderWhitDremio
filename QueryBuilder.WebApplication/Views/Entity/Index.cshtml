@using QueryBuilder.Client.Models
@using QueryBuilder.WebApplication.Models.ViewModels
@model ViewBasedQuery
@{
    ViewData["Title"] = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<form asp-action="Index" method="post" id="catalog">

    @for (int i = 0; i < ViewBag.entitys.Count; i++)
    {
        var entity = (Entity)ViewBag.entitys[i];
        @Html.HiddenFor(m => m.viewBasedQueryEntities[i].Alias)
        @Html.HiddenFor(m => m.viewBasedQueryEntities[i].TableName)
        //@Html.HiddenFor(m => m.viewBasedQueryEntities[i].viewPredicates)
        <table class="table table-sm table-striped table-bordered">
            <thead>
                <tr>
                    @{

                        <th>nombre</th>
                        <th>tipo</th>
                        <th>Selección</th>
                        <th>Condición</th>
                    }
                </tr>
            </thead>
            <tbody>
                @{
                    for (int j = 0; j < entity.atributes.Count; j++)
                    {
                        @Html.HiddenFor(m => m.viewBasedQueryEntities[i].fields[j])
                        @Html.HiddenFor(model => model.viewBasedQueryEntities[i].viewPredicates[j])
                        var attr = entity.atributes[j];
                        <tr>
                            <th>@attr.Name</th>
                            <th>@attr.Type</th>
                            <th>
                                @Html.CheckBoxFor(m => m.viewBasedQueryEntities[i].selected[j],
             new { id = $"{entity.Alias}_{attr.Name}", @class = "select-field" })
                            </th>
                            <th>
                                <div>
                                    <div id="@($"where_{entity.Alias}_{attr.Name}")" class="where"
                                         style="@((Model.viewBasedQueryEntities[i].selected[j]) ? "" : "display: none;")">

                                        @Html.HiddenFor(model => model.viewBasedQueryEntities[i].viewPredicates[j].BasicType)
                                        @Html.HiddenFor(model => model.viewBasedQueryEntities[i].viewPredicates[j].fieldName)
                                        @Html.DropDownListFor(model => model.viewBasedQueryEntities[i].viewPredicates[j].Operator,
                                         new List<SelectListItem> { new SelectListItem("---", "") }.Concat(attr.Listoperators.Select(a => new SelectListItem(a.ToString(), a.ToString()))),
                                         new { id = $"where-select_{entity.Alias}_{attr.Name}", @class = "where-select" })

                                        <p>
                                            <input id="@($"form-where-select_{entity.Alias}_{attr.Name}")"
                                                   asp-for=viewBasedQueryEntities[i].viewPredicates[j].expression1
                                                   type="@((attr.IsDate) ? "Date" : (attr.IsNumeric) ? "number" : "text")"
                                                   style="@((!Model.viewBasedQueryEntities[i].viewPredicates.Any(p=>p?.fieldName==attr.Name)
                                                    ||Model.viewBasedQueryEntities[i].viewPredicates.First(p=>p?.fieldName==attr.Name).Operator==null) ? "display: none;" : "")" />
                                        </p>
                                        <p>
                                            <input id="@($"form2-where-select_{entity.Alias}_{attr.Name}")"
                                                   asp-for=viewBasedQueryEntities[i].viewPredicates[j].expression2
                                                   type="@((attr.IsDate) ? "Date" : (attr.IsNumeric) ? "number" : "text")"
                                                   style="@((!Model.viewBasedQueryEntities[i].viewPredicates.Any(p=>p?.fieldName==attr.Name)
                                                    ||Model.viewBasedQueryEntities[i].viewPredicates.First(p=>p.fieldName==attr.Name).Operator==null
                                                    ||Model.viewBasedQueryEntities[i].viewPredicates.First(p=>p.fieldName==attr.Name).Operator!=OperatorType.Between) ? "display: none;" : "")" />
                                        </p>
                                    </div>
                                </div>
                            </th>
                        </tr>
                    }

                }
            </tbody>
        </table>

    }
    <button type="submit">Submit Consult</button>
</form>
@section scripts
{
    <script>
        $(document).ready(function () {

            $("select[class=where-select]").on("change", function () {
                var id = $(this).attr('id');
                var val = $(this).val();
                if (val == "") {
                    $("#form-" + id).hide();
                    $("#form2-" + id).hide();
                }
                else if (val == "Between") {
                    $("#form-" + id).show();
                    $("#form2-" + id).show();
                }
                else {
                    $("#form-" + id).show();
                    $("#form2-" + id).hide();
                }

            });
             $("#catalog input[type='checkbox'].select-field").on("click", function () {
                 var id = $(this).attr('id');
                 console.log(id);
                if ($(this).is(":checked")) {
                    $("#where_"+id).show();
                }
                else {
                    $("#where_"+id).hide();
                }
            });

        }).change();
    </script>
}